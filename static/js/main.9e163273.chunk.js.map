{"version":3,"sources":["types/FilterBy.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","hooks/useDebounce.ts","utils.ts","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["FilterBy","TodoList","todos","onSelectTodo","selectedTodo","useState","selectedTodoId","setSelectedTodoId","useEffect","className","map","todo","id","title","completed","cn","type","onClick","todoId","handlerSelectTodo","TodoFilterComponent","appliedFilter","onFilterChange","onQueryChange","query","setQuery","debouncedQuery","value","delay","debouncedValue","setDebouncedValue","setTimeout","clearTimeout","useDebounce","handlerSelectFilterType","filterKey","myEnum","enumValue","keys","Object","filter","x","length","getEnumKeyByEnumValue","onChange","e","target","placeholder","inputValue","style","pointerEvents","TodoFilter","React","memo","get","url","fullURL","Promise","resolve","then","fetch","res","json","Loader","TodoModal","onCloseModal","userId","loaderModal","setLoaderModal","user","setUser","getUser","finally","href","email","name","App","setTodos","todosToRender","setTodosToRender","loadTodosSpinner","setLoadTodosSpinner","isLoadedTodos","setIsLoadedTodos","all","filterByStatus","setFilterByStatus","setSelectedTodo","applyFilterByStatus","useCallback","val","filteredByStatus","toLowerCase","includes","active","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9e163273.chunk.js","sourcesContent":["export enum FilterBy {\n  all = 'all',\n  active = 'active',\n  completed = 'completed',\n}\n","import React, { useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodo: Todo | null;\n  onSelectTodo: (todo: Todo) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos, onSelectTodo, selectedTodo,\n}) => {\n  const [selectedTodoId, setSelectedTodoId] = useState<number | null>(null);\n\n  const handlerSelectTodo = (todoId: number, todo: Todo) => {\n    setSelectedTodoId(todoId);\n    onSelectTodo(todo);\n  };\n\n  useEffect(() => {\n    if (!selectedTodo) {\n      setSelectedTodoId(null);\n    }\n  }, [selectedTodo]);\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => {\n          const { id, title, completed } = todo;\n\n          return (\n            <tr\n              key={id}\n              data-cy=\"todo\"\n              className={cn(\n                { 'has-background-info-light': selectedTodoId === id },\n              )}\n            >\n              <td className=\"is-vcentered\">{id}</td>\n              <td className=\"is-vcentered\">\n                {completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p className={cn(\n                  { 'has-text-danger': !completed },\n                  { 'has-text-success': completed },\n                )}\n                >\n                  {title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => handlerSelectTodo(id, todo)}\n                >\n                  <span className=\"icon\">\n                    <i className={cn(\n                      'far',\n                      { 'fa-eye-slash': id === selectedTodoId },\n                      { 'fa-eye': id !== selectedTodoId },\n                    )}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useDebounce } from '../../hooks/useDebounce';\nimport { getEnumKeyByEnumValue } from '../../utils';\nimport { FilterBy } from '../../types/FilterBy';\n\ntype Props = {\n  appliedFilter: FilterBy;\n  onFilterChange: (status: FilterBy) => void;\n  onQueryChange: (query: string) => void;\n};\n\nconst TodoFilterComponent: React.FC<Props> = ({\n  appliedFilter,\n  onFilterChange,\n  onQueryChange,\n}) => {\n  const [query, setQuery] = useState<string>('');\n  const debouncedQuery = useDebounce<string>(query, 150);\n\n  const handlerSelectFilterType = (value: string) => {\n    const filterKey = getEnumKeyByEnumValue(FilterBy, value);\n\n    if (filterKey) {\n      onFilterChange(FilterBy[filterKey]);\n    }\n  };\n\n  const handlerQueryChange = (inputValue: string) => {\n    setQuery(inputValue);\n  };\n\n  const handlerClearQuery = () => {\n    setQuery('');\n  };\n\n  useEffect(() => {\n    onQueryChange(query);\n  }, [debouncedQuery]);\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={appliedFilter}\n            onChange={(e) => {\n              handlerSelectFilterType(e.target.value);\n            }}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={e => handlerQueryChange(e.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handlerClearQuery}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n\nexport const TodoFilter = React.memo(TodoFilterComponent);\n","import { useEffect, useState } from 'react';\n\nexport function useDebounce<T>(value: T, delay: number): T {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const id = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    return () => {\n      clearTimeout(id);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n}\n","// export function getEnumKeyByEnumValue<T>(\n//   myEnum: T, enumValue: number | string,\n// ): string {\n//   const keys = Object.keys(myEnum).filter(\n//     (x: string) => myEnum[x as keyof typeof myEnum] === enumValue,\n//   );\n\n//   return keys.length > 0 ? keys[0] : '';\n// }\n\nexport function getEnumKeyByEnumValue<T extends { [index: string]: string }>(\n  myEnum: T, enumValue: string,\n): keyof T | null {\n  const keys = Object.keys(myEnum).filter(x => myEnum[x] === enumValue);\n\n  return keys.length > 0 ? keys[0] : null;\n}\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo;\n  onCloseModal: (value: null) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, onCloseModal }) => {\n  const {\n    id,\n    title,\n    completed,\n    userId,\n  } = todo;\n\n  const [loaderModal, setLoaderModal] = useState<boolean>(true);\n  const [user, setUser] = useState<User | null>();\n\n  useEffect(() => {\n    getUser(userId)\n      .then(setUser)\n      .finally(() => {\n        setLoaderModal(false);\n      });\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loaderModal ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => onCloseModal(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {!completed ? (\n                <strong className=\"has-text-danger\">Planned</strong>\n              ) : (\n                <strong className=\"has-text-success\">Done</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user ? user.email : ''}`}>\n                {user ? user.name : ''}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useCallback, useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { FilterBy } from './types/FilterBy';\n\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [todosToRender, setTodosToRender] = useState<Todo[]>([]);\n  const [loadTodosSpinner, setLoadTodosSpinner] = useState<boolean>(false);\n  const [isLoadedTodos, setIsLoadedTodos] = useState<boolean>(false);\n\n  const [filterByStatus, setFilterByStatus] = useState<FilterBy>(FilterBy.all);\n  const [query, setQuery] = useState<string>('');\n\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  useEffect(() => {\n    setLoadTodosSpinner(true);\n\n    getTodos()\n      .then(setTodos)\n      .then(() => setIsLoadedTodos(true))\n      .finally(() => {\n        setLoadTodosSpinner(false);\n      });\n  }, []);\n\n  const applyFilterByStatus = useCallback((val: FilterBy) => {\n    // eslint-disable-next-line no-param-reassign\n    setFilterByStatus(val);\n  }, []);\n\n  const closeModal = () => {\n    setSelectedTodo(null);\n  };\n\n  useEffect(() => {\n    const filteredByQuery = query\n      ? todos.filter(todo => {\n        return todo.title.toLowerCase().includes(query.toLowerCase());\n      })\n      : todos;\n\n    const filteredByStatus = filteredByQuery.filter(todo => {\n      switch (filterByStatus) {\n        case FilterBy.active:\n          return !todo.completed;\n        case FilterBy.completed:\n          return todo.completed;\n        default:\n          return true;\n      }\n    });\n\n    setTodosToRender(filteredByStatus);\n  }, [todos, query, filterByStatus]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                onFilterChange={applyFilterByStatus}\n                onQueryChange={setQuery}\n                appliedFilter={filterByStatus}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loadTodosSpinner && (\n                <Loader />\n              )}\n              {isLoadedTodos && (\n                <TodoList\n                  todos={todosToRender}\n                  selectedTodo={selectedTodo}\n                  onSelectTodo={setSelectedTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          onCloseModal={closeModal}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}